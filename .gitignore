# Logs
logs
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*
pnpm-debug.log*
lerna-debug.log*

node_modules
dist
dist-ssr
*.local

# Editor directories and files
.vscode/*
!.vscode/extensions.json
.idea
.DS_Store
*.suo
*.ntvs*
*.njsproj
*.sln
*.sw?

Portfolio.jsx
import React, { useState, useRef, useEffect } from "react";
import { motion } from "framer-motion";
import "./Portfolio.css";

const Portfolio = ({ language }) => {
  const portfolioItems = [
    {
      id: 1,
      title: language === "ro" ? "Reels Instagram" : "Instagram Reels",
      video: "/video 1.mp4",
      thumbnail: "/video1-thumb.jpg",
    },
    {
      id: 2,
      title: language === "ro" ? "TikTok Viral" : "Viral TikTok",
      video: "/video 2.mp4",
      thumbnail: "/video2-thumb.jpg",
    },
    {
      id: 3,
      title: language === "ro" ? "YouTube Short" : "YouTube Short",
      video: "/video 3.mp4",
      thumbnail: "/video3-thumb.jpg",
    },
    {
      id: 4,
      title: language === "ro" ? "Reclamă Video" : "Video Ad",
      video: "/video 4.mp4",
      thumbnail: "/video4-thumb.jpg",
    },
    {
      id: 5,
      title: language === "ro" ? "Editare Eveniment" : "Event Editing",
      video: "/video 5.mp4",
      thumbnail: "/video5-thumb.jpg",
    },
  ];

  if (!Array.isArray(portfolioItems) || portfolioItems.length === 0) {
    return null; // siguranta daca lista nu exista
  }

  const wrapIndex = (i) => {
    const n = portfolioItems.length;
    return ((i % n) + n) % n;
  };

  const INITIAL_INDEX = 0; // primul video (cel care trebuie pe pauza la prima randare)
  const [currentIndex, setCurrentIndex] = useState(INITIAL_INDEX);
  const [firstPlayed, setFirstPlayed] = useState(false);

  const leftVideoRef = useRef(null);
  const centerVideoRef = useRef(null);
  const rightVideoRef = useRef(null);

  // Preload (ajută browserul să aducă fișierele)
  useEffect(() => {
    portfolioItems.forEach((it) => {
      const v = document.createElement("video");
      v.src = it.video;
      v.preload = "auto";
    });
  }, []); // rulează o dată

  // Când se schimbă indexul sau firstPlayed — controlez redarea
  useEffect(() => {
    const center = centerVideoRef.current;
    const left = leftVideoRef.current;
    const right = rightVideoRef.current;

    // Lateralele: rulează muted ca să afișeze cadru/imagini fluent (dacă browser permite)
    if (left) {
      left.muted = true;
      left.loop = true;
      left.play().catch(() => {
        /* ignorăm blocările autoplay; poster thumbnail rămâne vizibil */
      });
    }
    if (right) {
      right.muted = true;
      right.loop = true;
      right.play().catch(() => {
        /* ignorăm */
      });
    }

    // Centrul:
    if (!center) return;

    if (currentIndex === INITIAL_INDEX && !firstPlayed) {
      // primul video — pe pauză, overlay vizibil (nu forțăm play)
      try {
        center.pause();
        // center.currentTime = 0; // opțional
      } catch (e) { }
    } else {
      // restul videoclipurilor trebuie să pornească automat
      center
        .play()
        .catch(() => {
          // dacă autoplay e blocat din cauza sunetului, încercăm muted playback
          try {
            center.muted = true;
            center.play().catch(() => { });
          } catch (e) { }
        });
    }
  }, [currentIndex, firstPlayed, portfolioItems.length]);

  const prevItem = () => setCurrentIndex((p) => wrapIndex(p - 1));
  const nextItem = () => setCurrentIndex((p) => wrapIndex(p + 1));

  const leftIndex = wrapIndex(currentIndex - 1);
  const rightIndex = wrapIndex(currentIndex + 1);

  const handleFirstPlay = () => {
    const center = centerVideoRef.current;
    if (!center) return;
    // încerc să pornesc ne-mut (utilizatorul a dat click -> browser permite)
    center.muted = false;
    center
      .play()
      .then(() => {
        setFirstPlayed(true);
      })
      .catch(() => {
        // dacă nu reușește, forțăm muted play (mai puțin ideal dar evită blocări)
        center.muted = true;
        center.play().catch(() => { });
        setFirstPlayed(true);
      });
  };

  return (
    <section id="portfolio" className="portfolio">
      <div className="container">
        <motion.h2
          initial={{ opacity: 0 }}
          whileInView={{ opacity: 1 }}
          transition={{ duration: 0.5 }}
          viewport={{ once: true }}
        >
          {language === "ro" ? "Portofoliu" : "Portfolio"}
        </motion.h2>

        <div className="portfolio-carousel">
          <button className="carousel-button prev" onClick={prevItem} aria-label="Prev">
            <svg width="24" height="24" viewBox="0 0 24 24" fill="white" xmlns="http://www.w3.org/2000/svg">
              <path d="M15.41 7.41L14 6L8 12L14 18L15.41 16.59L10.83 12L15.41 7.41Z" />
            </svg>
          </button>

          <div className="carousel-container">
            {/* Left item */}
            <div className="carousel-item left" aria-hidden="false">
              <div className="portfolio-item small">
                <video
                  ref={leftVideoRef}
                  src={portfolioItems[leftIndex].video}
                  poster={portfolioItems[leftIndex].thumbnail}
                  preload="auto"
                  playsInline
                  muted
                  loop
                />
              </div>
            </div>

            {/* Center item */}
            <div className="carousel-item center">
              <div className="portfolio-item">
                <video
                  ref={centerVideoRef}
                  src={portfolioItems[currentIndex].video}
                  poster={portfolioItems[currentIndex].thumbnail}
                  preload="auto"
                  playsInline
                  loop
                  controls={currentIndex !== INITIAL_INDEX || firstPlayed}
                />
                {/* Overlay play doar pentru primul video la prima aparitie */}
                {currentIndex === INITIAL_INDEX && !firstPlayed && (
                  <button className="play-overlay" onClick={handleFirstPlay} aria-label="Play main video" />
                )}
              </div>
            </div>

            {/* Right item */}
            <div className="carousel-item right" aria-hidden="false">
              <div className="portfolio-item small">
                <video
                  ref={rightVideoRef}
                  src={portfolioItems[rightIndex].video}
                  poster={portfolioItems[rightIndex].thumbnail}
                  preload="auto"
                  playsInline
                  muted
                  loop
                />
              </div>
            </div>
          </div>

          <button className="carousel-button next" onClick={nextItem} aria-label="Next">
            <svg width="24" height="24" viewBox="0 0 24 24" fill="white" xmlns="http://www.w3.org/2000/svg">
              <path d="M8.59 16.59L10 18L16 12L10 6L8.59 7.41L13.17 12L8.59 16.59Z" />
            </svg>
          </button>
        </div>

        <div className="portfolio-actions">
          <button className="btn-primary">{language === "ro" ? "Vezi toate" : "View all"}</button>
        </div>
      </div>
    </section>
  );
};

export default Portfolio;

Portfolio.css:
.portfolio {
  position: relative;
  overflow: hidden;
  padding: 6rem 0;
}

.portfolio h2 {
  text - align: center;
  margin - bottom: 1.5rem;
}

/* păstrez structura caruselului așa cum ai avut */
.portfolio - carousel {
  position: relative;
  display: flex;
  align - items: center;
  justify - content: center;
  margin: 3rem 0;
}

/* containerul fix — folosește exact dimensiunile tale */
.carousel - container {
  position: relative;
  width: 100 %;
  max - width: 700px;
  height: 350px;
  display: flex;
  align - items: center;
  justify - content: center;
  perspective: 1000px;
  overflow: visible;
}

/* fiecare item (absolut pentru suprapunere) */
.carousel - item {
  position: absolute;
  transition: all 0.5s ease;
  display: flex;
  align - items: center;
  justify - content: center;
}

/* CENTRUL (mare) */
.carousel - item.center {
  width: 50 %;
  z - index: 3;
  left: 25 %; /* center pe orizontală: left 25% + width 50% */
  top: 0;
  transform: translateX(0) scale(1);
  opacity: 1;
}

/* LATERALE: mai mici și ușor centrate vertical (70% din inaltimea containerului) */
.carousel - item.left {
  left: 0;
  width: 25 %;
  z - index: 2;
  top: 15 %; /* 15% margin top -> vertical center pentru item mai scurt */
  transform: translateX(-10 %) scale(0.95);
  opacity: 0.95;
}

.carousel - item.right {
  right: 0;
  width: 25 %;
  z - index: 2;
  top: 15 %;
  transform: translateX(10 %) scale(0.95);
  opacity: 0.95;
}

/* hover lateral - ușor accent */
.carousel - item.left: hover,
.carousel - item.right:hover {
  opacity: 1;
  transform: translateX(0) scale(1);
}

/* portofolio-item - centrul ocupă 100% înălțime, lateralele 70% */
.portfolio - item {
  width: 100 %;
  height: 100 %;
  border - radius: 20px;
  overflow: hidden;
  box - shadow: 0 15px 35px rgba(0, 0, 0, 0.3);
  transition: all 0.3s ease;
  position: relative;
  background: transparent;
}

/* micile carduri pentru laterale vor avea înălțime 70% */
.carousel - item.left.portfolio - item,
.carousel - item.right.portfolio - item {
  height: 70 %;
}

/* centrul 100% */
.carousel - item.center.portfolio - item {
  height: 100 %;
}

/* videoclipurile — ocupă tot containerul lor */
.portfolio - item video {
  width: 100 %;
  height: 100 %;
  object - fit: cover;
  border - radius: 20px;
  display: block;
}

/* MASCĂ de fade (se aplică doar lateralelor) - vizibilitate imaginii, nu bloc negru */
.carousel - item.left.portfolio - item video {
  -webkit - mask - image: linear - gradient(
    to right,
    rgba(0, 0, 0, 0) 0 %,
    rgba(0, 0, 0, 1) 25 %
  );
  mask - image: linear - gradient(
    to right,
    rgba(0, 0, 0, 0) 0 %,
    rgba(0, 0, 0, 1) 25 %
  );
}

.carousel - item.right.portfolio - item video {
  -webkit - mask - image: linear - gradient(
    to left,
    rgba(0, 0, 0, 0) 0 %,
    rgba(0, 0, 0, 1) 25 %
  );
  mask - image: linear - gradient(
    to left,
    rgba(0, 0, 0, 0) 0 %,
    rgba(0, 0, 0, 1) 25 %
  );
}

/* butoane navigație (centrare verticală păstrată) */
.carousel - button {
  position: absolute;
  top: 50 %;
  transform: translateY(-50 %);
  width: 50px;
  height: 50px;
  border - radius: 50 %;
  background: rgba(0, 0, 0, 0.5);
  border: none;
  color: white;
  cursor: pointer;
  z - index: 6;
  display: flex;
  align - items: center;
  justify - content: center;
  transition: all 0.25s ease;
}

.carousel - button:hover {
  background: rgba(0, 0, 0, 0.75);
}

.carousel - button.prev {
  left: 5 %;
}

.carousel - button.next {
  right: 5 %;
}

/* butonul play suprapus pe centrul primului video (doar la prima afișare) */
.play - overlay {
  position: absolute;
  inset: 0;
  display: grid;
  place - items: center;
  z - index: 8;
  cursor: pointer;
  background: radial - gradient(transparent 45 %, rgba(0, 0, 0, 0.45) 100 %);
  border - radius: 20px;
  border: 0;
}

.play - overlay::before {
  content: "";
  width: 90px;
  height: 90px;
  border - radius: 999px;
  background: rgba(0, 0, 0, 0.6);
  display: block;
  box - shadow: 0 10px 30px rgba(0, 0, 0, 0.35);
  position: relative;
}

/* triunghiul play (centrat optic) */
.play - overlay::after {
  content: "";
  position: absolute;
  border - style: solid;
  border - width: 18px 0 18px 30px;
  border - color: transparent transparent transparent white;
  margin - left: 7px;
}

/* butonul din jos */
.portfolio - actions {
  display: flex;
  justify - content: center;
  margin - top: 2rem;
}

.portfolio - actions.btn - primary {
  display: inline - flex;
  align - items: center;
  gap: 0.5rem;
  padding: 1rem 2rem;
  background: #ff6b9d;
  color: white;
  border: none;
  border - radius: 50px;
  font - weight: 600;
  cursor: pointer;
  transition: transform 0.2s;
}

.portfolio - actions.btn - primary:hover {
  transform: translateY(-3px);
}

/* responsive — păstrăm lateralele vizibile; doar ajustăm dimensiuni */
@media(max - width: 992px) {
  .carousel - container {
    height: 300px;
    max - width: 700px;
  }
  .carousel - item.center {
    width: 60 %;
    left: 20 %;
  }
  .carousel - item.left,
  .carousel - item.right {
    width: 30 %;
    top: 12 %;
  }
  .carousel - button.prev {
    left: 2 %;
  }
  .carousel - button.next {
    right: 2 %;
  }
}

@media(max - width: 768px) {
  .carousel - container {
    height: 250px;
    max - width: 600px;
  }
  .carousel - item.center {
    width: 70 %;
    left: 15 %;
  }
  .carousel - item.left,
  .carousel - item.right {
    width: 22 %;
    top: 10 %;
    transform: scale(0.9);
  }
  .carousel - button {
    width: 44px;
    height: 44px;
  }
}

@media(max - width: 576px) {
  .carousel - container {
    height: 200px;
  }
  .carousel - item.center {
    width: 75 %;
    left: 12.5 %;
  }
  .carousel - item.left,
  .carousel - item.right {
    width: 18 %;
    top: 8 %;
  }
}
